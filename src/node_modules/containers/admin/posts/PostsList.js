import React, {Component} from 'react'
import {connect} from 'react-redux'
import {Table, Button, Grid, Row, Col, Modal} from 'react-bootstrap';
import PostForm from './PostForm'

const MyLargeModal = React.createClass({

  render() {
    console.log('props=',this.props.posts[2])
    return (
      <Modal {...this.props} bsSize="large" aria-labelledby="contained-modal-title-lg">
        <Modal.Header closeButton>
          <Modal.Title id="contained-modal-title-lg">Modal heading</Modal.Title>
        </Modal.Header>
        <Modal.Body>
          <h4>Wrapped Text</h4>
          <p>id={this.props.id}</p>
          <PostForm
            initialValues={this.props.posts[0]}
            isNew={1}

          />
        </Modal.Body>
        <Modal.Footer>
          <Button onClick={this.props.onHide}>Close</Button>
        </Modal.Footer>
      </Modal>
    );
  },
});


class AdminPostsList extends Component {

  constructor(props) {
    super(props);
    this.state = {
      modalEdit: {
        Show: false,
        id: ''
      }
    }
  }

  editPost = (id) => {
    this.props.history.push(`/admin/posts/edit/${id}`);
  }

  newPost = () => {
    this.props.history.push(`/admin/posts/new`);
  }

  render() {
    const {posts} = this.props
    let modalEditClose = () => this.setState({ modalEdit: {Show: false }});
    return (
      <div>
      <Grid>
        <Row className="show-grid">
          <Col xs={5} md={1} />
          <Col xs={8} md={10}>
            <Table responsive striped hover bordered condensed>
              <thead>
              <tr>
                <th width={1}>#</th>
                <th width='100%'>Title</th>
                <th colSpan='2' width='1'>
                  <Button bsStyle="success">Add</Button>
                </th>
              </tr>
              </thead>
              <tbody>
              {posts.map((row) => {
                return (<tr key={row.id.toString()}>
                  <td key={row.id.toString()}>{row.id}</td>
                  <td key={row.title}>{row.title}</td>
                  <td key="{row.id}_edit">
                    <Button
                      bsStyle="warning"
                      onClick={() => this.setState({ modalEdit: {Show: true, id: row.id }})}>
                      Edit
                    </Button>
                  </td>
                  <td key="{row.id}"> <Button bsStyle="danger">Delete</Button></td>
                </tr>
                )
              })}
              </tbody>
            </Table>
          </Col>
          <Col xs={5} md={1} />
        </Row>
      </Grid>
      <MyLargeModal show={this.state.modalEdit.Show} id={this.state.modalEdit.id} onHide={modalEditClose} posts={posts}/>
      </div>
    )
  }
}

const mapStateToProps = (state) => {
  return {
    posts: state.posts || []
  }
}

const mapDispatchToProps = {}

export default connect(mapStateToProps, mapDispatchToProps)(AdminPostsList)
